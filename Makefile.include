# Makefile.include
#
# This is a global include file that sets up various parameters for
# compiling SPIN and all of it's components
#
#
###################################################################
# Some paths need to be manually defined here:


ifndef SPIN_PATH
    SPIN_PATH = ../..
endif

GENWRAPPER_BIN = src/genwrapper/genwrapper

SPIN_INSTALL_PREFIX = /usr/local

###################################################################
# Create variables for OS and architecture:
ifeq ($(shell uname -s),Linux)
        OS:=Linux
        ARCH:=32
        ifeq ($(findstring 64,$(shell uname -m)),64)
                ifeq ($(shell uname -m),x86_64)
                        ARCH:=64
                else
                        ARCH:=32
                endif
        endif
        SPIN_FLAGS += -D__Linux
endif

ifeq ($(shell uname -s),Darwin)
        OS:=Darwin
        ifeq ($(shell arch),i386)
                ARCH:=_i386
        else
                ARCH:=_ppc
        endif
        SPIN_FLAGS += -D__Darwin
endif

###################################################################
# Generic compilation stuff:

CC = cc 
CXX = g++
LD = ld


SPIN_FLAGS += -fPIC
SPIN_LIBS += -L/usr/local/lib -L/usr/lib
SPIN_INCLUDE += -I${SPIN_PATH}/include -I${SPIN_PATH}/src/tinyxml -I/usr/local/include -I/usr/include




###################################################################
# Some customizations needed for Darwin:

ifeq ($(OS),Darwin)

  SPIN_INCLUDE += -I/usr/X11R6/include -I/opt/local/include 
  SPIN_LIBS += -L/opt/local/lib

  ifeq ($(ARCH),_i386)
    SPIN_FLAGS += -arch i386
  endif

endif


###################################################################
# For OpenSceneGraph (OSG):

ifdef OSG_BLD_PATH
  OSG_LIBS += -L$(OSG_BLD_PATH)/lib
endif

ifdef OSG_SRC_PATH
  OSG_INCLUDE += -I$(OSG_SRC_PATH)/include
endif

ifeq ($(OS),Darwin)
  #export MACOSX_DEPLOYMENT_TARGET=10.4
  export MACOSX_DEPLOYMENT_TARGET=10.5
  export SDKROOT=/Developer/SDKs/MacOSX10.5.sdk
  
  OSG_FLAGS += -D__USE_OSX_AGL_IMPLEMENTATION__
  FRAMEWORKS = OpenThreads osg osgGA osgSim osgDB \
	       osgManipulator osgText osgUtil osgFX osgParticle osgViewer osgIntrospection
  OSG_LIBS += -lpthread $(patsubst %,-framework %,$(FRAMEWORKS)) 
  OSG_LIBS += -isysroot $(SDKROOT)
  OSG_LIBS += -F/Library/Frameworks -L/opt/local/lib -L$(SDKROOT)/usr/X11R6/lib

else
  OSG_LIBS += -lc -lm -ldl -lGL -lX11 -lpthread \
	      -lOpenThreads -losg -losgGA -losgSim -losgDB -losgIntrospection \
	      -losgManipulator -losgText -losgUtil -losgFX -losgParticle -losgViewer
  OSG_LIBS += -L/usr/local/lib/osgPlugins \
	      -L/usr/local/lib64\
	      -L/usr/local/lib64/osgPlugins \
	      -L/usr/X11R6/lib 
endif


###################################################################
# For BOOST:

BOOST_INCLUDE = -I/usr/include/boost

ifeq ($(OS),Darwin)
  BOOST_INCLUDE += -I/opt/local/include/boost-1_35
  BOOST_LIBS = -lboost_thread-mt
else
  BOOST_LIBS = -lboost_thread
endif

###################################################################
# For WX:

ifndef WXCONFIG
  WXCONFIG = "wx-config"
endif
WX_LIBTYPE = $(patsubst wx_%,%,$(shell $(WXCONFIG) --basename))

WX_LIBS = $(shell $(WXCONFIG) --libs --gl-libs)
WX_CXXFLAGS = $(shell $(WXCONFIG) --cxxflags)
WX_VERSION = $(shell $(WXCONFIG) --version)

# wxPropGrid library:
WX_LIBS += -lwxcode_$(WX_LIBTYPE)_propgrid-2.8


###################################################################
# For appsink:

APPSINK_PATH=$(HOME)/svn/miville/inhouse/prototypes/appsink
SPIN_INCLUDE+=-I$(APPSINK_PATH)

